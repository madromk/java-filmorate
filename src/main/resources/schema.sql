CREATE TABLE IF NOT EXISTS ratings (
                                       rating_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                       name VARCHAR
);

CREATE TABLE IF NOT EXISTS films (
                                     film_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     name VARCHAR,
                                     description VARCHAR(200),
                                     releaseDate TIMESTAMP,
                                     duration INT,
                                     rating_id INT REFERENCES ratings(rating_id),
                                     rate INT
);

CREATE TABLE IF NOT EXISTS genres (
                                      category_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                      name VARCHAR
);

CREATE TABLE IF NOT EXISTS film_genres (
                                           film_id INT REFERENCES films(film_id) ON DELETE CASCADE,
                                           category_id INT REFERENCES genres (category_id) ON DELETE CASCADE,
                                           PRIMARY KEY (film_id, category_id)
);

CREATE TABLE IF NOT EXISTS users (
                                     user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     name VARCHAR,
                                     birthday TIMESTAMP,
                                     email VARCHAR,
                                     login VARCHAR
);

CREATE TABLE IF NOT EXISTS amountLikes (
                                           film_id INTEGER REFERENCES films(film_id),
                                           user_id INTEGER REFERENCES users(user_id),
                                           PRIMARY KEY (film_id, user_id)
);



CREATE TABLE IF NOT EXISTS friends (
                                       user1_id INTEGER,
                                       user2_id INTEGER,
                                       CONSTRAINT FK_FRIENDS_USERS1 FOREIGN KEY (user1_id) REFERENCES users(user_id),
                                       CONSTRAINT FK_FRIENDS_USERS2 FOREIGN KEY (user2_id) REFERENCES users(user_id),
                                       PRIMARY KEY (user1_id, user2_id)
);